/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c OfonoSettings -p ofonosettings -N ofono_settings.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef OFONOSETTINGS_H_1398787049
#define OFONOSETTINGS_H_1398787049

#include "ofonosettingsdata.h"

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.ofono.Settings
 */
class OfonoSettings: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.Settings"; }

public:
    OfonoSettings(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OfonoSettings();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> Get(const QString &group, const QString &key)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(group) << QVariant::fromValue(key);
        return asyncCallWithArgumentList(QLatin1String("Get"), argumentList);
    }

    inline QDBusPendingReply<OfonoGroupedSettings> GetAll()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetAll"), argumentList);
    }

    inline QDBusPendingReply<OfonoArrayOfSettings> GetGroup(const QString &group)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(group);
        return asyncCallWithArgumentList(QLatin1String("GetGroup"), argumentList);
    }

    inline QDBusPendingReply<> Reset(const QString &group, const QString &key)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(group) << QVariant::fromValue(key);
        return asyncCallWithArgumentList(QLatin1String("Reset"), argumentList);
    }

    inline QDBusPendingReply<> ResetAll()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("ResetAll"), argumentList);
    }

    inline QDBusPendingReply<> ResetGroup(const QString &group)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(group);
        return asyncCallWithArgumentList(QLatin1String("ResetGroup"), argumentList);
    }

    inline QDBusPendingReply<> Set(const QString &group, const QString &key, const QString &value)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(group) << QVariant::fromValue(key) << QVariant::fromValue(value);
        return asyncCallWithArgumentList(QLatin1String("Set"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Changed(const QString &group, const QString &key, const QString &value);
};

#endif
